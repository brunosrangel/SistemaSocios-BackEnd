// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace SistemaSocios.WebApi.MySqlN.Migrations
{
    [DbContext(typeof(DbMySqlContext))]
    [Migration("20240405181925_xis009")]
    partial class xis009
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EnderecoUsuarioModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("EnderecoUsuarioModelId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("TipoEnderecoUsuarioId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UsuarioID")
                        .HasColumnType("char(36)");

                    b.Property<bool?>("status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoUsuarioModelId");

                    b.HasIndex("TipoEnderecoUsuarioId");

                    b.HasIndex("UsuarioID");

                    b.ToTable("EnderecoUsuario");
                });

            modelBuilder.Entity("EntidadeModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("DescricaoEntidade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool?>("status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.HasKey("Id");

                    b.ToTable("Entidades", (string)null);
                });

            modelBuilder.Entity("EscolaridadeUsuarioModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("DescricaoEscolaridade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool?>("status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("EscolaridadeUsuario");
                });

            modelBuilder.Entity("HistoricoMensalidadesModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("AnoReferencia")
                        .HasColumnType("int");

                    b.Property<Guid?>("HistoricoMensalidadesModelId")
                        .HasColumnType("char(36)");

                    b.Property<int>("MesReferencia")
                        .HasColumnType("int");

                    b.Property<Guid>("StatusMensalidadeId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UsuarioID")
                        .HasColumnType("char(36)");

                    b.Property<bool?>("status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("HistoricoMensalidadesModelId");

                    b.HasIndex("UsuarioID");

                    b.ToTable("HistoricoMensalidades", (string)null);
                });

            modelBuilder.Entity("JurosMensalidadeModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DataVigenciaJuros")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("JurosMensalidadeModelId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UsuarioID")
                        .HasColumnType("char(36)");

                    b.Property<bool?>("status")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("statusValorJuros")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("valorJuros")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JurosMensalidadeModelId");

                    b.HasIndex("UsuarioID");

                    b.ToTable("JurosMensalidade");
                });

            modelBuilder.Entity("RedeSocialModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DescricaoRedeSocialUsuario")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("RedeSocialModelId")
                        .HasColumnType("char(36)");

                    b.Property<string>("UrlRedeSocial")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("UsuarioID")
                        .HasColumnType("char(36)");

                    b.Property<bool?>("status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("RedeSocialModelId");

                    b.HasIndex("UsuarioID");

                    b.ToTable("RedeSocial");
                });

            modelBuilder.Entity("StatusMensalidadeModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("DescricaoStatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("HistoricoMensalidadesModelId")
                        .HasColumnType("char(36)");

                    b.Property<bool?>("status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("HistoricoMensalidadesModelId");

                    b.ToTable("StatusMensalidade");
                });

            modelBuilder.Entity("TelefoneUsuarioModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("DddTelefoneUsuario")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NumeroTelefoneUsuario")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("TelefoneUsuarioModelId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TipoTelefoneUsuarioId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UsuarioID")
                        .HasColumnType("char(36)");

                    b.Property<bool?>("status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("TelefoneUsuarioModelId");

                    b.HasIndex("TipoTelefoneUsuarioId");

                    b.HasIndex("UsuarioID");

                    b.ToTable("TelefoneUsuario");
                });

            modelBuilder.Entity("TipoEnderecoUsuarioModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool?>("status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("TipoEnderecoUsuario");
                });

            modelBuilder.Entity("TipoTelefoneUsuarioModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool?>("status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("TipoTelefoneUsuario");
                });

            modelBuilder.Entity("UsuarioModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataIniciacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataUltimaObrigacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("EnderecoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("EntidadeId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("EscolaridadeId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("JurosMensalidadeId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("MensalidadeId")
                        .HasColumnType("char(36)");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("PerfilId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Profissao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("RedeSocialId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("TelefoneId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ValorMensalidadeId")
                        .HasColumnType("char(36)");

                    b.Property<bool?>("status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.HasKey("Id");

                    b.HasIndex("EntidadeId");

                    b.HasIndex("EscolaridadeId");

                    b.HasIndex("PerfilId");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("ValorMensalidadeModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UsuarioID")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("ValorMensalidade")
                        .HasColumnType("decimal(65,30)");

                    b.Property<Guid?>("ValorMensalidadeModelId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("VigenciaMensalidade")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("status")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("statusValorMensalidade")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioID");

                    b.HasIndex("ValorMensalidadeModelId");

                    b.ToTable("ValorMensalidade");
                });

            modelBuilder.Entity("perfilModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("DescricaoPerfil")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool?>("status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Perfis", (string)null);
                });

            modelBuilder.Entity("EnderecoUsuarioModel", b =>
                {
                    b.HasOne("EnderecoUsuarioModel", null)
                        .WithMany("Enderecos")
                        .HasForeignKey("EnderecoUsuarioModelId");

                    b.HasOne("TipoEnderecoUsuarioModel", "TipoEndereco")
                        .WithMany("Enderecos")
                        .HasForeignKey("TipoEnderecoUsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_EnderecoUsuario_TipoEnderecoUsuario_TipoEnderecoId");

                    b.HasOne("UsuarioModel", "Usuario")
                        .WithMany("Enderecos")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoEndereco");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("HistoricoMensalidadesModel", b =>
                {
                    b.HasOne("HistoricoMensalidadesModel", null)
                        .WithMany("HistoricosMensalidades")
                        .HasForeignKey("HistoricoMensalidadesModelId");

                    b.HasOne("UsuarioModel", "Usuario")
                        .WithMany("HistoricosMensalidades")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("JurosMensalidadeModel", b =>
                {
                    b.HasOne("JurosMensalidadeModel", null)
                        .WithMany("JurosMensalidadesModel")
                        .HasForeignKey("JurosMensalidadeModelId");

                    b.HasOne("UsuarioModel", "UsuarioModel")
                        .WithMany("JurosMensalidades")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UsuarioModel");
                });

            modelBuilder.Entity("RedeSocialModel", b =>
                {
                    b.HasOne("RedeSocialModel", null)
                        .WithMany("RedesSociais")
                        .HasForeignKey("RedeSocialModelId");

                    b.HasOne("UsuarioModel", "UsuarioModel")
                        .WithMany("RedesSociais")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UsuarioModel");
                });

            modelBuilder.Entity("StatusMensalidadeModel", b =>
                {
                    b.HasOne("HistoricoMensalidadesModel", null)
                        .WithMany("StatusMensalidades")
                        .HasForeignKey("HistoricoMensalidadesModelId");
                });

            modelBuilder.Entity("TelefoneUsuarioModel", b =>
                {
                    b.HasOne("TelefoneUsuarioModel", null)
                        .WithMany("Telefones")
                        .HasForeignKey("TelefoneUsuarioModelId");

                    b.HasOne("TipoTelefoneUsuarioModel", "TipoTelefone")
                        .WithMany()
                        .HasForeignKey("TipoTelefoneUsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UsuarioModel", "Usuario")
                        .WithMany("Telefones")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoTelefone");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("UsuarioModel", b =>
                {
                    b.HasOne("EntidadeModel", "Entidade")
                        .WithMany()
                        .HasForeignKey("EntidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EscolaridadeUsuarioModel", "Escolaridade")
                        .WithMany()
                        .HasForeignKey("EscolaridadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("perfilModel", "Perfil")
                        .WithMany()
                        .HasForeignKey("PerfilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entidade");

                    b.Navigation("Escolaridade");

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("ValorMensalidadeModel", b =>
                {
                    b.HasOne("UsuarioModel", "UsuarioModel")
                        .WithMany("ValorMensalidades")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ValorMensalidadeModel", null)
                        .WithMany("ValorMensalidades")
                        .HasForeignKey("ValorMensalidadeModelId");

                    b.Navigation("UsuarioModel");
                });

            modelBuilder.Entity("EnderecoUsuarioModel", b =>
                {
                    b.Navigation("Enderecos");
                });

            modelBuilder.Entity("HistoricoMensalidadesModel", b =>
                {
                    b.Navigation("HistoricosMensalidades");

                    b.Navigation("StatusMensalidades");
                });

            modelBuilder.Entity("JurosMensalidadeModel", b =>
                {
                    b.Navigation("JurosMensalidadesModel");
                });

            modelBuilder.Entity("RedeSocialModel", b =>
                {
                    b.Navigation("RedesSociais");
                });

            modelBuilder.Entity("TelefoneUsuarioModel", b =>
                {
                    b.Navigation("Telefones");
                });

            modelBuilder.Entity("TipoEnderecoUsuarioModel", b =>
                {
                    b.Navigation("Enderecos");
                });

            modelBuilder.Entity("UsuarioModel", b =>
                {
                    b.Navigation("Enderecos");

                    b.Navigation("HistoricosMensalidades");

                    b.Navigation("JurosMensalidades");

                    b.Navigation("RedesSociais");

                    b.Navigation("Telefones");

                    b.Navigation("ValorMensalidades");
                });

            modelBuilder.Entity("ValorMensalidadeModel", b =>
                {
                    b.Navigation("ValorMensalidades");
                });
#pragma warning restore 612, 618
        }
    }
}
