// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace SistemaSocios.WebApi.MySqlN.Migrations
{
    [DbContext(typeof(DbMySqlContext))]
    [Migration("20240403181213_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EnderecoUsuarioModel", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("TipoEnderecoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TipoEnderecoUsuarioId")
                        .HasColumnType("char(36)");

                    b.Property<string>("cidade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("endereco")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("TipoEnderecoId");

                    b.ToTable("EnderecoUsuario");
                });

            modelBuilder.Entity("EntidadeModel", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("DescricaoEntidade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("statusEntidade")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Entidades", (string)null);
                });

            modelBuilder.Entity("EscolaridadeUsuarioModel", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("DescricaoEscolaridade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("StatusEscolaridade")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("EscolaridadeUsuario");
                });

            modelBuilder.Entity("HistoricoMensalidadesModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("AnoReferencia")
                        .HasColumnType("int");

                    b.Property<int>("MesReferencia")
                        .HasColumnType("int");

                    b.Property<Guid>("StatusMensalidadeId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UsuarioID")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("StatusMensalidadeId");

                    b.HasIndex("UsuarioID");

                    b.ToTable("HistoricoMensalidades", (string)null);
                });

            modelBuilder.Entity("JurosMensalidadeModel", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DataVigenciaJuros")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("statusValorJuros")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("valorJuros")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("JurosMensalidade");
                });

            modelBuilder.Entity("RedeSocialModel", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DescricaoRedeSocialUsuario")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UrlRedeSocial")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("RedeSocial");
                });

            modelBuilder.Entity("StatusMensalidadeModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("DescricaoStatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("StatusMensalidadeModel");
                });

            modelBuilder.Entity("TelefoneUsuarioModel", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("DddTelefoneUsuario")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NumeroTelefoneUsuario")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("TipoTelefoneId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("TipoTelefoneId");

                    b.ToTable("TelefoneUsuario");
                });

            modelBuilder.Entity("TipoEnderecoUsuarioModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TipoEnderecoUsuario");
                });

            modelBuilder.Entity("TipoTelefoneUsuarioModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TipoTelefoneUsuario");
                });

            modelBuilder.Entity("UsuarioModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("EntidadeId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("EscolaridadId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("JurosMensalidadeId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("RedeSocialId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ValorMensalidadeId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("dataEntrada")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("dataIniciacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("dataUltimaObrigacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("enderecoId")
                        .HasColumnType("char(36)");

                    b.Property<string>("nomeUsuario")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("perfilId")
                        .HasColumnType("char(36)");

                    b.Property<string>("profissao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("telefoneId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("ValorMensalidadeModel", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("ValorMensalidade")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("VigenciaMensalidade")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("statusValorMensalidade")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("ValorMensalidade");
                });

            modelBuilder.Entity("perfilModel", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("DescricaoPerfil")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("StatusPerfil")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Perfis", (string)null);
                });

            modelBuilder.Entity("EnderecoUsuarioModel", b =>
                {
                    b.HasOne("UsuarioModel", null)
                        .WithMany("endereco")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TipoEnderecoUsuarioModel", "TipoEndereco")
                        .WithMany()
                        .HasForeignKey("TipoEnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoEndereco");
                });

            modelBuilder.Entity("EntidadeModel", b =>
                {
                    b.HasOne("UsuarioModel", null)
                        .WithMany("entidade")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EscolaridadeUsuarioModel", b =>
                {
                    b.HasOne("UsuarioModel", null)
                        .WithOne("escolaridade")
                        .HasForeignKey("EscolaridadeUsuarioModel", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HistoricoMensalidadesModel", b =>
                {
                    b.HasOne("StatusMensalidadeModel", "statusMensalidade")
                        .WithMany()
                        .HasForeignKey("StatusMensalidadeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("UsuarioModel", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");

                    b.Navigation("statusMensalidade");
                });

            modelBuilder.Entity("JurosMensalidadeModel", b =>
                {
                    b.HasOne("UsuarioModel", null)
                        .WithMany("aplicaJurosMensalidade")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RedeSocialModel", b =>
                {
                    b.HasOne("UsuarioModel", null)
                        .WithMany("redesocial")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TelefoneUsuarioModel", b =>
                {
                    b.HasOne("UsuarioModel", null)
                        .WithMany("telefone")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TipoTelefoneUsuarioModel", "TipoTelefone")
                        .WithMany()
                        .HasForeignKey("TipoTelefoneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoTelefone");
                });

            modelBuilder.Entity("ValorMensalidadeModel", b =>
                {
                    b.HasOne("UsuarioModel", null)
                        .WithMany("Mensalidade")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("perfilModel", b =>
                {
                    b.HasOne("UsuarioModel", null)
                        .WithOne("perfilAcesso")
                        .HasForeignKey("perfilModel", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UsuarioModel", b =>
                {
                    b.Navigation("Mensalidade");

                    b.Navigation("aplicaJurosMensalidade");

                    b.Navigation("endereco");

                    b.Navigation("entidade");

                    b.Navigation("escolaridade")
                        .IsRequired();

                    b.Navigation("perfilAcesso")
                        .IsRequired();

                    b.Navigation("redesocial");

                    b.Navigation("telefone");
                });
#pragma warning restore 612, 618
        }
    }
}
